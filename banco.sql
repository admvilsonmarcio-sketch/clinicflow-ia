-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.base_conhecimento (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clinica_id uuid NOT NULL,
  titulo text NOT NULL,
  conteudo text NOT NULL,
  categoria text,
  tags ARRAY,
  embedding USER-DEFINED,
  ativo boolean DEFAULT true,
  criado_por uuid,
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT base_conhecimento_pkey PRIMARY KEY (id),
  CONSTRAINT base_conhecimento_clinica_id_fkey FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id),
  CONSTRAINT base_conhecimento_criado_por_fkey FOREIGN KEY (criado_por) REFERENCES public.perfis(id)
);
CREATE TABLE public.clinicas (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  nome text NOT NULL,
  descricao text,
  endereco text,
  telefone text,
  email text,
  site text,
  logo_url text,
  configuracoes jsonb DEFAULT '{}'::jsonb,
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT clinicas_pkey PRIMARY KEY (id)
);
CREATE TABLE public.consultas (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clinica_id uuid NOT NULL,
  paciente_id uuid NOT NULL,
  medico_id uuid NOT NULL,
  titulo text NOT NULL,
  descricao text,
  data_consulta timestamp with time zone NOT NULL,
  duracao_minutos integer DEFAULT 60,
  status text DEFAULT 'agendada'::text CHECK (status = ANY (ARRAY['agendada'::text, 'confirmada'::text, 'realizada'::text, 'cancelada'::text, 'faltou'::text])),
  google_calendar_event_id text,
  lembrete_enviado boolean DEFAULT false,
  observacoes text,
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT consultas_pkey PRIMARY KEY (id),
  CONSTRAINT consultas_paciente_id_fkey FOREIGN KEY (paciente_id) REFERENCES public.pacientes(id),
  CONSTRAINT consultas_medico_id_fkey FOREIGN KEY (medico_id) REFERENCES public.perfis(id),
  CONSTRAINT consultas_clinica_id_fkey FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id)
);
CREATE TABLE public.contextos_ia (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversa_id uuid NOT NULL,
  dados_contexto jsonb NOT NULL,
  ultima_atualizacao timestamp with time zone DEFAULT now(),
  CONSTRAINT contextos_ia_pkey PRIMARY KEY (id),
  CONSTRAINT contextos_ia_conversa_id_fkey FOREIGN KEY (conversa_id) REFERENCES public.conversas(id)
);
CREATE TABLE public.conversas (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clinica_id uuid NOT NULL,
  paciente_id uuid NOT NULL,
  plataforma text NOT NULL CHECK (plataforma = ANY (ARRAY['whatsapp'::text, 'instagram'::text])),
  id_conversa_plataforma text NOT NULL,
  status text DEFAULT 'ativa'::text CHECK (status = ANY (ARRAY['ativa'::text, 'fechada'::text, 'escalada'::text])),
  atribuida_para uuid,
  ultima_mensagem_em timestamp with time zone DEFAULT now(),
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT conversas_pkey PRIMARY KEY (id),
  CONSTRAINT conversas_atribuida_para_fkey FOREIGN KEY (atribuida_para) REFERENCES public.perfis(id),
  CONSTRAINT conversas_clinica_id_fkey FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id),
  CONSTRAINT conversas_paciente_id_fkey FOREIGN KEY (paciente_id) REFERENCES public.pacientes(id)
);
CREATE TABLE public.documentos_pacientes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  paciente_id uuid NOT NULL,
  clinica_id uuid NOT NULL,
  nome_arquivo text NOT NULL,
  tipo_arquivo text NOT NULL,
  tamanho_arquivo integer NOT NULL,
  url_arquivo text NOT NULL,
  categoria text DEFAULT 'outro'::text CHECK (categoria = ANY (ARRAY['exame'::text, 'receita'::text, 'atestado'::text, 'documento_pessoal'::text, 'outro'::text])),
  descricao text,
  data_documento date,
  criado_por uuid,
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT documentos_pacientes_pkey PRIMARY KEY (id),
  CONSTRAINT documentos_pacientes_paciente_id_fkey FOREIGN KEY (paciente_id) REFERENCES public.pacientes(id),
  CONSTRAINT documentos_pacientes_clinica_id_fkey FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id),
  CONSTRAINT documentos_pacientes_criado_por_fkey FOREIGN KEY (criado_por) REFERENCES auth.users(id)
);
CREATE TABLE public.integracoes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clinica_id uuid NOT NULL,
  tipo text NOT NULL CHECK (tipo = ANY (ARRAY['whatsapp'::text, 'instagram'::text, 'google_calendar'::text, 'n8n'::text])),
  nome text NOT NULL,
  configuracao jsonb NOT NULL,
  ativo boolean DEFAULT true,
  ultima_sincronizacao timestamp with time zone,
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT integracoes_pkey PRIMARY KEY (id),
  CONSTRAINT integracoes_clinica_id_fkey FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id)
);
CREATE TABLE public.logs_atividade (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clinica_id uuid NOT NULL,
  usuario_id uuid,
  acao text NOT NULL,
  tipo_recurso text NOT NULL,
  recurso_id uuid,
  detalhes jsonb,
  endereco_ip inet,
  user_agent text,
  criado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT logs_atividade_pkey PRIMARY KEY (id),
  CONSTRAINT logs_atividade_clinica_id_fkey FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id),
  CONSTRAINT logs_atividade_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.perfis(id)
);
CREATE TABLE public.mensagens (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversa_id uuid NOT NULL,
  tipo_remetente text NOT NULL CHECK (tipo_remetente = ANY (ARRAY['paciente'::text, 'ia'::text, 'humano'::text, 'sistema'::text])),
  remetente_id uuid,
  conteudo text NOT NULL,
  tipo_mensagem text DEFAULT 'texto'::text CHECK (tipo_mensagem = ANY (ARRAY['texto'::text, 'imagem'::text, 'audio'::text, 'documento'::text, 'localizacao'::text])),
  metadados jsonb DEFAULT '{}'::jsonb,
  id_mensagem_plataforma text,
  gerada_por_ia boolean DEFAULT false,
  confianca_ia double precision,
  criado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT mensagens_pkey PRIMARY KEY (id),
  CONSTRAINT mensagens_conversa_id_fkey FOREIGN KEY (conversa_id) REFERENCES public.conversas(id),
  CONSTRAINT mensagens_remetente_id_fkey FOREIGN KEY (remetente_id) REFERENCES public.perfis(id)
);
CREATE TABLE public.pacientes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clinica_id uuid NOT NULL,
  nome_completo text NOT NULL,
  email text NOT NULL,
  telefone text NOT NULL,
  data_nascimento date NOT NULL,
  genero text NOT NULL CHECK (genero = ANY (ARRAY['masculino'::text, 'feminino'::text, 'outro'::text])),
  whatsapp_id text,
  instagram_id text,
  ultimo_contato timestamp with time zone,
  status text DEFAULT 'ativo'::text CHECK (status = ANY (ARRAY['ativo'::text, 'inativo'::text, 'bloqueado'::text])),
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  cpf character varying UNIQUE CHECK (cpf IS NULL OR validar_cpf(cpf::text)),
  rg character varying,
  orgao_emissor character varying,
  uf_rg character varying,
  estado_civil character varying,
  profissao character varying,
  telefone_celular character varying,
  telefone_fixo character varying,
  cep character varying,
  logradouro character varying,
  numero character varying,
  complemento character varying,
  bairro character varying,
  cidade character varying,
  uf character varying,
  nome_emergencia character varying,
  parentesco_emergencia character varying,
  observacoes_emergencia text,
  tipo_sanguineo character varying,
  alergias_conhecidas ARRAY,
  medicamentos_uso ARRAY,
  historico_medico_detalhado text,
  observacoes_gerais text,
  foto_url text,
  qr_code text,
  data_ultima_consulta timestamp with time zone,
  status_ativo boolean DEFAULT true,
  convenio_medico character varying,
  data_rascunho timestamp with time zone,
  numero_carteirinha character varying
  CONSTRAINT pacientes_pkey PRIMARY KEY (id),
  CONSTRAINT pacientes_clinica_id_fkey FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id)
);
CREATE TABLE public.pacientes_historico (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  paciente_id uuid NOT NULL,
  campo_alterado character varying NOT NULL,
  valor_anterior text,
  valor_novo text,
  usuario_id uuid NOT NULL,
  data_alteracao timestamp with time zone DEFAULT now(),
  motivo text,
  CONSTRAINT pacientes_historico_pkey PRIMARY KEY (id),
  CONSTRAINT pacientes_historico_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES auth.users(id),
  CONSTRAINT pacientes_historico_paciente_id_fkey FOREIGN KEY (paciente_id) REFERENCES public.pacientes(id)
);
CREATE TABLE public.perfis (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  nome_completo text NOT NULL,
  foto_url text,
  telefone text,
  cargo text DEFAULT 'medico'::text CHECK (cargo = ANY (ARRAY['admin'::text, 'medico'::text, 'assistente'::text, 'recepcionista'::text])),
  clinica_id uuid,
  criado_em timestamp with time zone DEFAULT now(),
  atualizado_em timestamp with time zone DEFAULT now(),
  CONSTRAINT perfis_pkey PRIMARY KEY (id),
  CONSTRAINT perfis_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT fk_perfis_clinica FOREIGN KEY (clinica_id) REFERENCES public.clinicas(id)
);