name: 🎯 Responsividade CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  responsive-tests:
    name: 📱 Testes de Responsividade
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Instalar dependências
      run: npm ci

    - name: 🔧 Setup Playwright
      run: npx playwright install --with-deps

    - name: 🏗️ Build do projeto
      run: npm run build

    - name: 🔍 Lint (ESLint + Stylelint + Tailwind)
      run: npm run lint

    - name: 🎭 Testes de Responsividade
      run: npm run test:responsive

    - name: 💡 Auditoria Lighthouse
      run: npm run lighthouse

    - name: 📊 Upload dos relatórios
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: responsive-reports
        path: |
          reports/
          test-results/
        retention-days: 30

    - name: 📋 Comentário no PR com resultados
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            // Ler relatório do Lighthouse se existir
            const lighthousePath = path.join(process.cwd(), 'reports', 'lighthouse-summary.html');
            let comment = '## 📊 Relatório de Responsividade\n\n';
            
            if (fs.existsSync(lighthousePath)) {
              comment += '✅ Auditoria Lighthouse concluída\n';
              comment += '📱 Relatórios disponíveis nos artifacts\n\n';
            } else {
              comment += '⚠️ Relatório Lighthouse não encontrado\n\n';
            }
            
            comment += '### 🎯 Critérios de Aceite\n';
            comment += '- **Performance Mobile**: ≥ 80\n';
            comment += '- **Best Practices**: ≥ 90\n';
            comment += '- **Accessibility**: ≥ 90\n';
            comment += '- **Overflow**: Zero elementos\n\n';
            comment += '📥 Baixe os artifacts para ver os relatórios detalhados.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Erro ao criar comentário:', error.message);
          }

  lint-only:
    name: 🔍 Lint Rápido
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Instalar dependências
      run: npm ci

    - name: 🔍 Lint completo
      run: npm run lint

    - name: ✅ Type Check
      run: npm run type-check